commit 6a62fe399b68ab9e3625ef5e7900394f389adc3a
Author: Péter Szilágyi <peterke@gmail.com>
Date:   Tue Feb 18 13:26:00 2020 +0200

    params: release Geth v1.9.11 stable

commit dae3aee5ff7ebcd24a50937a1d0ae080c2f1d897
Author: Felix Lange <fjl@twurst.com>
Date:   Tue Feb 18 12:24:05 2020 +0100

    les: add bootstrap nodes as initial discoveries (#20688)

commit 05ccbb5edd315bcb1b630a4a6bb86bdada18e4d9
Merge: 91b228966 4f55e24c0
Author: Péter Szilágyi <peterke@gmail.com>
Date:   Tue Feb 18 10:57:05 2020 +0200

    Merge pull request #20687 from karalabe/cht-1.9.11
    
    params: update CHTs for the v1.9.11 release

commit 4f55e24c02011c47feb33129f68284f092bcc06e
Author: Péter Szilágyi <peterke@gmail.com>
Date:   Tue Feb 18 10:55:44 2020 +0200

    params: update CHTs for the v1.9.11 release

commit 91b228966e042d8fad36451d524bbf8b2abde690
Author: Felix Lange <fjl@twurst.com>
Date:   Mon Feb 17 17:33:32 2020 +0100

    rpc: remove startup error for invalid modules, log it instead (#20684)
    
    This removes the error added in #20597 in favor of a log message at
    error level. Failing to start broke a bunch of people's setups and is
    probably not the right thing to do for this check.

commit 1b9c5b393b9a52078a25f426af6e1fcc5996ca67
Author: Boqin Qin <Bobbqqin@gmail.com>
Date:   Tue Feb 18 00:33:12 2020 +0800

    all: fix goroutine leaks in unit tests by adding 1-elem channel buffer (#20666)
    
    This fixes a bunch of cases where a timeout in the test would leak
    a goroutine.

commit 57d4898e2992a46fc2deab93a2666a2979b6704c
Author: Felix Lange <fjl@twurst.com>
Date:   Mon Feb 17 15:23:25 2020 +0100

    p2p/dnsdisc: re-check tree root when leaf resolution fails (#20682)
    
    This adds additional logic to re-resolve the root name of a tree when a
    couple of leaf requests have failed. We need this change to avoid
    getting into a failure state where leaf requests keep failing for half
    an hour when the tree has been updated.

commit c2117982b874cc3538e0a8a7e779423c9943e2b7
Merge: 1c4c486a8 36a1e0b67
Author: Péter Szilágyi <peterke@gmail.com>
Date:   Mon Feb 17 14:43:30 2020 +0200

    Merge pull request #20678 from karalabe/broadcast-sqrt-proper
    
    eth: don't enforce minimum broadcast, fix broadcast test

commit 1c4c486a85ef304e060da592bf46f81d015aa662
Author: Felix Lange <fjl@twurst.com>
Date:   Mon Feb 17 12:22:52 2020 +0100

    cmd/ethkey: speed up test by using weaker scrypt parameters (#20680)

commit ac7278776838ba4dc69f57f8dbbef219d8bc3b6f
Author: Felix Lange <fjl@twurst.com>
Date:   Mon Feb 17 12:22:15 2020 +0100

    p2p: remove MeteredPeerEvent (#20679)
    
    This event was added for the dashboard, but we don't need it anymore
    since the dashboard is gone.

commit 26284ec3cc0bb8d314fc740d976c9090b82ec07f
Merge: 37531b188 fef8c985b
Author: Péter Szilágyi <peterke@gmail.com>
Date:   Mon Feb 17 13:15:17 2020 +0200

    Merge pull request #20681 from karalabe/go1.13.8
    
    travis, appveyor, build: bump builder Go to 1.13.8

commit fef8c985bc03df86ed9fc35e660c81fb3eed0330
Author: Péter Szilágyi <peterke@gmail.com>
Date:   Mon Feb 17 13:13:24 2020 +0200

    travis, appveyor, build: bump builder Go to 1.13.8

commit 36a1e0b67d4f8d8b8861f8ee1de78eb881241127
Author: Péter Szilágyi <peterke@gmail.com>
Date:   Mon Feb 17 12:01:03 2020 +0200

    eth: don't enforce minimum broadcast, fix broadcast test

commit 37531b18847774a7f057496bc34f2a48053fa417
Author: Boqin Qin <Bobbqqin@gmail.com>
Date:   Sun Feb 16 02:14:29 2020 +0800

    cmd/faucet: protect f.reqs with Rlock to prevent data race (#20669)
    
    * cmd/faucet: add Rlock to protect f.reqs in apiHandler
    
    * cmd/faucet: make a locked copy of f.reqs

commit 855690523a6bd98ce2eef9489d9f76cf2bc3868c
Author: Martin Holst Swende <martin@swende.se>
Date:   Fri Feb 14 09:54:02 2020 +0100

    core: ensure state exists for prefetcher (#20627)

commit 38d1b0cba277db17129a4870158115c5a428cffc
Author: Felix Lange <fjl@twurst.com>
Date:   Thu Feb 13 14:38:30 2020 +0100

    cmd/geth: enable DNS discovery by default (#20660)
    
    * node: expose config in service context
    
    * eth: integrate p2p/dnsdisc
    
    * cmd/geth: add some DNS flags
    
    * eth: remove DNS URLs
    
    * cmd/utils: configure DNS names for testnets
    
    * params: update DNS URLs
    
    * cmd/geth: configure mainnet DNS
    
    * cmd/utils: rename DNS flag and fix flag processing
    
    * cmd/utils: remove debug print
    
    * node: fix test

commit eddcecc160b275cd53c1f288f1123bb828cab659
Merge: 90caa2cab 9938d954c
Author: Péter Szilágyi <peterke@gmail.com>
Date:   Thu Feb 13 15:28:34 2020 +0200

    Merge pull request #20234 from rjl493456442/newtxhashes_2
    
    core, eth: announce based transaction propagation

commit 9938d954c8391682947682543cf9b52196507a88
Author: Péter Szilágyi <peterke@gmail.com>
Date:   Wed Jan 22 16:39:43 2020 +0200

    eth: rework tx fetcher to use O(1) ops + manage network requests

commit 90caa2cabbd46c3e712eb7216bd668dd02bb15a8
Author: Felix Lange <fjl@twurst.com>
Date:   Thu Feb 13 11:10:03 2020 +0100

    p2p: new dial scheduler (#20592)
    
    * p2p: new dial scheduler
    
    This change replaces the peer-to-peer dial scheduler with a new and
    improved implementation. The new code is better than the previous
    implementation in two key aspects:
    
    - The time between discovery of a node and dialing that node is
      significantly lower in the new version. The old dialState kept
      a buffer of nodes and launched a task to refill it whenever the buffer
      became empty. This worked well with the discovery interface we used to
      have, but doesn't really work with the new iterator-based discovery
      API.
    
    - Selection of static dial candidates (created by Server.AddPeer or
      through static-nodes.json) performs much better for large amounts of
      static peers. Connections to static nodes are now limited like dynanic
      dials and can no longer overstep MaxPeers or the dial ratio.
    
    * p2p/simulations/adapters: adapt to new NodeDialer interface
    
    * p2p: re-add check for self in checkDial
    
    * p2p: remove peersetCh
    
    * p2p: allow static dials when discovery is disabled
    
    * p2p: add test for dialScheduler.removeStatic
    
    * p2p: remove blank line
    
    * p2p: fix documentation of maxDialPeers
    
    * p2p: change "ok" to "added" in static node log
    
    * p2p: improve dialTask docs
    
    Also increase log level for "Can't resolve node"
    
    * p2p: ensure dial resolver is truly nil without discovery
    
    * p2p: add "looking for peers" log message
    
    * p2p: clean up Server.run comments
    
    * p2p: fix maxDialedConns for maxpeers < dialRatio
    
    Always allocate at least one dial slot unless dialing is disabled using
    NoDial or MaxPeers == 0. Most importantly, this fixes MaxPeers == 1 to
    dedicate the sole slot to dialing instead of listening.
    
    * p2p: fix RemovePeer to disconnect the peer again
    
    Also make RemovePeer synchronous and add a test.
    
    * p2p: remove "Connection set up" log message
    
    * p2p: clean up connection logging
    
    We previously logged outgoing connection failures up to three times.
    
    - in SetupConn() as "Setting up connection failed addr=..."
    - in setupConn() with an error-specific message and "id=... addr=..."
    - in dial() as "Dial error task=..."
    
    This commit ensures a single log message is emitted per failure and adds
    "id=... addr=... conn=..." everywhere (id= omitted when the ID isn't
    known yet).
    
    Also avoid printing a log message when a static dial fails but can't be
    resolved because discv4 is disabled. The light client hit this case all
    the time, increasing the message count to four lines per failed
    connection.
    
    * p2p: document that RemovePeer blocks

commit 5f2002bbcc1ad21818d9b08badea84acac6d0481
Author: Boqin Qin <bobbqqin@bupt.edu.cn>
Date:   Wed Feb 12 22:20:50 2020 +0800

    accounts: add walletsNoLock to avoid double read lock (#20655)

commit a9614c3c9167d2da3b5c72e773e64984ab504814
Author: Boqin Qin <bobbqqin@bupt.edu.cn>
Date:   Wed Feb 12 22:19:47 2020 +0800

    event, p2p/simulations/adapters: fix rare goroutine leaks (#20657)
    
    Co-authored-by: Felix Lange <fjl@twurst.com>

commit 46c4b699c8b5b537416d395852a3f44fd7a45f49
Author: Marius van der Wijden <m.vanderwijden@live.de>
Date:   Wed Feb 12 11:33:17 2020 +0100

    accounts/abi/bind/backends: add support for historical state (#20644)

commit 18213281627b310ac68d22bca7c401ab5f67e1da
Author: Boqin Qin <bobbqqin@bupt.edu.cn>
Date:   Wed Feb 12 17:33:31 2020 +0800

    event: add missing unlock before panic (#20653)

commit 8045504abf64a865be4b1dbc780b796a9f5d11cc
Author: Adam Schmideg <adamschmideg@users.noreply.github.com>
Date:   Tue Feb 11 16:46:32 2020 +0100

    les: log disconnect reason when light server is not synced (#20643)
    
    Co-authored-by: ligi <ligi@ligi.de>

commit c22fdec3c7c48bc5076cb85b92a55a68951db167
Author: Felix Lange <fjl@twurst.com>
Date:   Tue Feb 11 16:36:49 2020 +0100

    common/mclock: add NewTimer and Timer.Reset (#20634)
    
    These methods can be helpful when migrating existing timer code.

commit 049e17116e5e00a052384905a433fed5245ea5c4
Author: rjl493456442 <garyrong0905@gmail.com>
Date:   Mon Oct 28 19:59:07 2019 +0800

    core, eth: implement eth/65 transaction fetcher

commit dcffb7777fc2978cf1bb243f1ebdaa5f75d1e542
Author: winsvega <dimitry@ethereum.org>
Date:   Tue Feb 11 10:54:05 2020 +0100

    cmd/geth retesteth: add eth_getBlockByHash (#20621)

commit 8694d14e655a20d70e51b7c4605d63d53de8d351
Author: chabashilah <doumodoumo@gmail.com>
Date:   Tue Feb 11 18:52:51 2020 +0900

    signer: add bytes32 as valid primitive (#20609)

commit 172f7778fe498c383e0bdb234aaac4f61d4a2512
Author: Adam Schmideg <adamschmideg@users.noreply.github.com>
Date:   Tue Feb 11 09:48:58 2020 +0100

    rpc: add error when call result parameter is not addressable (#20638)

commit 34bb132b108e0c17c079d6b24524c2958306a009
Author: AmitBRD <60668103+AmitBRD@users.noreply.github.com>
Date:   Sun Feb 9 15:50:44 2020 -0500

    graphql: add transaction signature values (#20623)
    
    The feature update allows the GraphQL API endpoint to retrieve
    transaction signature R,S,V parameters.
    
    Co-authored-by: amitshah <amitshah0t7@gmail.com>
    Co-authored-by: Felix Lange <fjl@twurst.com>

commit 675f4e75b868289993fa2cb9eb543532a3c80610
Author: Nick Ward <wardnick@protonmail.com>
Date:   Sun Feb 9 20:18:47 2020 +0400

    README.md: update evm usage example (#20635)

commit 4a231cd951faaf011cdec8fdde66a948b637718e
Author: Martin Holst Swende <martin@swende.se>
Date:   Fri Feb 7 10:44:32 2020 +0100

    internal/ethapi: return non-null "number" for pending block (#20616)
    
    Fixes: #20587, ethereum/web3.py#1572

commit 976a0f5558e20ed7cb7ba2cd68d7429d1ef01db9
Author: Felix Lange <fjl@twurst.com>
Date:   Wed Feb 5 15:29:59 2020 +0100

    cmd/devp2p: fix Route53 TXT record splitting (#20626)
    
    For longer records and subtree entries, the deployer created two
    separate TXT records. This doesn't work as intended because the client
    will receive the two records in arbitrary order. The fix is to encode
    longer values as "string1""string2" instead of "string1", "string2".
    This encoding creates a single record on AWS Route53.

commit a1313b5b1e9713e7e10f5ef29b7981c9c49d688b
Author: Martin Holst Swende <martin@swende.se>
Date:   Tue Feb 4 13:02:38 2020 +0100

    trie: make hasher parallel when number of changes are large (#20488)
    
    * trie: make hasher parallel when number of changes are large
    
    * trie: remove unused field dirtyCount
    
    * trie: rename unhashedCount/unhashed

commit 711ed74e091f2ada6e2aa84e5e62b9696b589d8a
Author: meowsbits <45600330+meowsbits@users.noreply.github.com>
Date:   Tue Feb 4 04:49:13 2020 -0600

    cmd/geth: add 'dumpgenesis' command (#20191)
    
    Adds the 'geth dumpgenesis' command, which writes the configured
    genesis in JSON format to stdout. This provides a way to generate the
    data (structure and content) that can then be used with the 'geth init'
    command.

commit 058a4ac5f13f49a67d4b28111dd0ad3eea387c8c
Author: Martin Holst Swende <martin@swende.se>
Date:   Tue Feb 4 11:32:31 2020 +0100

    core/evm: less iteration in blockhash (#20589)
    
    * core/vm/runtime: add test for blockhash
    
    * core/evm: less iteration in blockhash
    
    * core/vm/runtime: nitpickfix
    
    Co-authored-by: Péter Szilágyi <peterke@gmail.com>

commit 33791dbeb51ce910983d15dda53fd83c05be9bb3
Author: tintin <tintinweb@oststrom.com>
Date:   Tue Feb 4 09:55:07 2020 +0100

    tracers: avoid panic on invalid arguments  (#20612)
    
    * add regression tests for #20611
    
    * eth/tracers: fix panics occurring for invalid params in js-tracers
    
    Co-authored-by: Martin Holst Swende <martin@swende.se>

commit 5a9c96454e04673124eedf681ae3aa0a58ffc843
Author: Martin Holst Swende <martin@swende.se>
Date:   Mon Feb 3 16:28:30 2020 +0100

    trie: separate hashes and committer, collapse on commit
    
    * trie:  make db insert use size instead of full data
    
    * core/state: minor optimization in state onleaf allocation
    
    * trie: implement dedicated committer and hasher
    
    * trie: use dedicated committer/hasher
    
    * trie: linter nitpicks
    
    * core/state, trie: avoid unnecessary storage trie load+commit
    
    * trie: review feedback, mainly docs + minor changes
    
    * trie: start deprecating old hasher
    
    * trie: fix misspell+lint
    
    * trie: deprecate hasher.go, make proof framework use new hasher
    
    * trie: rename pure_committer/hasher to committer/hasher
    
    * trie, core/state: fix review concerns
    
    * trie: more review concerns
    
    * trie: make commit collapse into hashnode, don't touch dirtyness
    
    * trie: goimports fixes
    
    * trie: remove panics

commit 4cc89a5a32bd3623a065765637d5c08641e2a251
Author: Felix Lange <fjl@twurst.com>
Date:   Mon Feb 3 16:22:46 2020 +0100

    internal/build: don't crash in DownloadFile when offline (#20595)

commit 15d09038a6b1d533bc78662f2f0b77ccf03aaab0
Author: Martin Holst Swende <martin@swende.se>
Date:   Fri Jan 31 14:12:19 2020 +0100

    params: update bootnodes (#20610)

commit 3c776c71994d7efde8793172cc8c09573a006dcc
Author: Martin Holst Swende <martin@swende.se>
Date:   Fri Jan 31 12:00:37 2020 +0100

    retesteth: clean txpool on rewind, default dao support (#20596)

commit 24cab2d5357ed968aa5a4752f7afc27c8320b064
Author: Guillaume Ballet <gballet@gmail.com>
Date:   Thu Jan 30 11:21:10 2020 +0100

    core/vm/runtime: fix typos in comment (#20608)

commit 594e038e75a1acf3d922d48afdcc2b7bdae40368
Author: Guillaume Ballet <gballet@gmail.com>
Date:   Wed Jan 29 13:47:56 2020 +0100

    signer/rules: use goja and remove otto (#20599)
    
    * signer: replace otto with goja
    
    * go.mod: remove Otto

commit a903912b9622780a7b6d852a21307a8a81962fd7
Author: Felix Lange <fjl@twurst.com>
Date:   Tue Jan 28 10:37:08 2020 +0100

    rpc: check module availability at startup (#20597)
    
    Fixes #20467
    
    Co-authored-by: meowsbits <45600330+meowsbits@users.noreply.github.com>

commit 44c365c3e2a3ab0f9f6f9c8ae1fa22e51cd3424f
Author: Zhou Zhiyao <ZHOU0250@e.ntu.edu.sg>
Date:   Mon Jan 27 21:03:15 2020 +0800

    rpc: reset writeConn when conn is closed on readErr (#20414)
    
    This change makes the client attempt to reconnect when a write fails.
    We already had reconnect support, but the reconnect would previously
    happen on the next call after an error. Being more eager leads to a
    smoother experience overall.

commit 7b68975a00ee914d91f9c6a56c55a357012ab844
Author: Guillaume Ballet <gballet@gmail.com>
Date:   Mon Jan 27 11:50:48 2020 +0100

    console, internal/jsre: use github.com/dop251/goja (#20470)
    
    This replaces the JavaScript interpreter used by the console with goja,
    which is actively maintained and a lot faster than otto. Clef still uses otto
    and eth/tracers still uses duktape, so we are currently dependent on three
    different JS interpreters. We're looking to replace the remaining uses of otto
    soon though.

commit 60deeb103e0a3c9d414e71cc47c9adb1d46fe0da
Author: Guillaume Ballet <gballet@gmail.com>
Date:   Mon Jan 27 10:05:21 2020 +0100

    cmd/evm: accept --input for disasm command (#20548)

commit 0b284f6c6cfc6df452ca23f9454ee16a6330cb8e
Author: Martin Holst Swende <martin@swende.se>
Date:   Thu Jan 23 20:55:56 2020 +0100

    cmd/geth/retesteth: use canon head instead of keeping alternate count (#20572)

commit 8a5c81349ead2dc3208ba09517f7ee9f6866a7db
Author: Guillaume Ballet <gballet@gmail.com>
Date:   Thu Jan 23 16:08:06 2020 +0100

    eth: fix comment typo in handler.go (#20575)

commit 33c56ebc6757fd50e7a7ea1d594754e33d904887
Author: Martin Holst Swende <martin@swende.se>
Date:   Tue Jan 21 15:51:36 2020 +0100

    cmd: implement abidump (#19958)
    
    * abidump: implement abi dump command
    
    * cmd/abidump: add license

commit 31baf3a9afbca0ca08cc9487444d31f1530fa1b0
Author: Felix Lange <fjl@twurst.com>
Date:   Tue Jan 21 13:57:33 2020 +0100

    log, internal/debug: delete RotatingFileHandler (#20586)
    
    * log: delete RotatingFileHandler
    
    We added this for the dashboard, which is gone now. The
    handler never really worked well and had data race and file
    handling issues.
    
    * internal/debug: remove unused RotatingFileHandler setup code

commit ad2fc7c6a6487d9864b47b29e7686f0afb765ede
Author: Péter Szilágyi <peterke@gmail.com>
Date:   Mon Jan 20 12:32:47 2020 +0200

    params: begin Geth v1.9.11 release cycle
